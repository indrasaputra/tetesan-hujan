// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/raindrop_creator.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/indrasaputra/tetesan-hujan/entity"
)

// MockRaindropRepository is a mock of RaindropRepository interface
type MockRaindropRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRaindropRepositoryMockRecorder
}

// MockRaindropRepositoryMockRecorder is the mock recorder for MockRaindropRepository
type MockRaindropRepositoryMockRecorder struct {
	mock *MockRaindropRepository
}

// NewMockRaindropRepository creates a new mock instance
func NewMockRaindropRepository(ctrl *gomock.Controller) *MockRaindropRepository {
	mock := &MockRaindropRepository{ctrl: ctrl}
	mock.recorder = &MockRaindropRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRaindropRepository) EXPECT() *MockRaindropRepositoryMockRecorder {
	return m.recorder
}

// GetCollections mocks base method
func (m *MockRaindropRepository) GetCollections(ctx context.Context) ([]*entity.Collection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCollections", ctx)
	ret0, _ := ret[0].([]*entity.Collection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCollections indicates an expected call of GetCollections
func (mr *MockRaindropRepositoryMockRecorder) GetCollections(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCollections", reflect.TypeOf((*MockRaindropRepository)(nil).GetCollections), ctx)
}

// SaveRaindrop mocks base method
func (m *MockRaindropRepository) SaveRaindrop(ctx context.Context, raindrop *entity.Raindrop, collectionID int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveRaindrop", ctx, raindrop, collectionID)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveRaindrop indicates an expected call of SaveRaindrop
func (mr *MockRaindropRepositoryMockRecorder) SaveRaindrop(ctx, raindrop, collectionID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveRaindrop", reflect.TypeOf((*MockRaindropRepository)(nil).SaveRaindrop), ctx, raindrop, collectionID)
}
